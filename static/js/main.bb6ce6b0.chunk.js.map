{"version":3,"sources":["Components/GlobalStyle.ts","api.tsx","Components/MovieList/MovieList.tsx","Components/Loader.tsx","Components/MovieList/MovieList.Container.tsx","App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","reset","api","axios","create","baseURL","getMovieList","get","Item","styled","div","Image","img","Data","MovieTitle","MovieGerensList","MovieGerens","MovieRating","MovieSummary","MovieList","medium_cover_image","year","rating","title","summary","genres","src","alt","map","index","slice","LoaderDiv","Loader","Movie","useState","loading","setLoading","movieList","setMovieList","a","data","movies","console","log","useEffect","getList","movie","id","Container","section","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAaeA,EAVKC,YAAH,wPACXC,K,+CCFAC,E,OAAMC,EAAMC,OAAO,CACvBC,QAAS,8BAGEC,EAAe,kBAAMJ,EAAIK,IAAI,qC,OCFpCC,EAAOC,IAAOC,IAAV,qOAWJC,EAAQF,IAAOG,IAAV,8GAOLC,EAAOJ,IAAOC,IAAV,yEAKJI,EAAaL,IAAOC,IAAV,iJAQVK,EAAkBN,IAAOC,IAAV,mHAOfM,EAAcP,IAAOC,IAAV,qEAKXO,EAAcR,IAAOC,IAAV,mGAMXQ,EAAeT,IAAOC,IAAV,yEA8BHS,EAzByB,SAAC,GAAD,IACtCC,EADsC,EACtCA,mBACAC,EAFsC,EAEtCA,KACAC,EAHsC,EAGtCA,OACAC,EAJsC,EAItCA,MACAC,EALsC,EAKtCA,QACAC,EANsC,EAMtCA,OANsC,OAQtC,eAACjB,EAAD,WACE,cAACG,EAAD,CAAOe,IAAKN,EAAoBO,IAAKJ,EAAOA,MAAOA,IACnD,eAACV,EAAD,WACE,eAACC,EAAD,WACGS,EADH,IACWF,EADX,OAGA,cAACN,EAAD,UACGU,EAAOG,KAAI,SAACH,EAAQI,GAAT,OACV,cAACb,EAAD,UAA0BS,GAARI,QAGtB,eAACZ,EAAD,WAAcK,EAAd,WACA,eAACJ,EAAD,WAAeM,EAAQM,MAAM,EAAG,KAAhC,gBC3EAC,EAAsBtB,IAAOC,IAAV,yKAYVsB,EAFU,kBAAM,cAACD,EAAD,8BC6BhBE,I,EAAAA,EApCf,WACE,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAFe,4CAIf,8BAAAC,EAAA,+EAMcjC,IANd,gBAIwB+B,EAJxB,EAGMG,KACEA,KAAQC,OAGZH,EAAaD,GAPjB,gDASIK,QAAQC,IAAR,MATJ,yBAWIP,GAAW,GAXf,6EAJe,sBAuBf,OAJAQ,qBAAU,YAnBK,mCAoBbC,KACC,IAGD,mCACGV,EACC,cAAC,EAAD,IAEAE,EAAUT,KAAI,SAACkB,GAAD,OACZ,cAAC,EAAD,eAA8BA,GAAdA,EAAMC,UC7B1BC,EAAYvC,IAAOwC,QAAV,6LAmBAC,MATf,WACE,OACE,eAACF,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QChBNG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bb6ce6b0.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyle = createGlobalStyle`\n    ${reset};\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    }\n`;\n\nexport default GlobalStyle;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://yts-proxy.now.sh/',\n});\n\nexport const getMovieList = () => api.get('/list_movies.json?sort_by=rating');\n","import React from 'react';\nimport styled from 'styled-components';\nimport { MovieProps } from './types';\n\nconst Item = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 30px;\n  background: #fff;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 18px 50px -10px;\n  width: 550px;\n  border-radius: 25px;\n  margin-bottom: 30px;\n`;\n\nconst Image = styled.img`\n  width: 190px;\n  height: 280px;\n  margin-right: 30px;\n  border-radius: 10px;\n`;\n\nconst Data = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst MovieTitle = styled.div`\n  font-size: 20px;\n  display: flex;\n  justify-content: center;\n  word-break: break-all;\n  padding-bottom: 20px;\n`;\n\nconst MovieGerensList = styled.div`\n  color: grey;\n  display: flex;\n  justify-content: center;\n  padding-bottom: 20px;\n`;\n\nconst MovieGerens = styled.div`\n  padding-left: 5px;\n  font-size: 8px;\n`;\n\nconst MovieRating = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-bottom: 20px;\n`;\n\nconst MovieSummary = styled.div`\n  color: #455a64;\n  word-break: break-all;\n`;\n\nconst MovieList: React.FC<MovieProps> = ({\n  medium_cover_image,\n  year,\n  rating,\n  title,\n  summary,\n  genres,\n}) => (\n  <Item>\n    <Image src={medium_cover_image} alt={title} title={title} />\n    <Data>\n      <MovieTitle>\n        {title}({year})\n      </MovieTitle>\n      <MovieGerensList>\n        {genres.map((genres, index) => (\n          <MovieGerens key={index}>{genres}</MovieGerens>\n        ))}\n      </MovieGerensList>\n      <MovieRating>{rating}/10.0</MovieRating>\n      <MovieSummary>{summary.slice(0, 160)}...</MovieSummary>\n    </Data>\n  </Item>\n);\n\nexport default MovieList;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst LoaderDiv: React.FC = styled.div`\n  font-weight: 500;\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n`;\n\nconst Loader: React.FC = () => <LoaderDiv>Now Loading...</LoaderDiv>;\n\nexport default Loader;\n","import React, { useState, useEffect } from 'react';\nimport { getMovieList } from '../../api';\nimport MovieList from './MovieList';\nimport Loader from '../Loader';\nimport { IGetMovie } from './types';\n\nfunction Movie() {\n  const [loading, setLoading] = useState(true);\n  const [movieList, setMovieList] = useState([]);\n\n  async function getList() {\n    try {\n      const {\n        data: {\n          data: { movies: movieList },\n        },\n      } = await getMovieList();\n      setMovieList(movieList);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    getList();\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        movieList.map((movie: IGetMovie) => (\n          <MovieList key={movie.id} {...movie} />\n        ))\n      )}\n    </>\n  );\n}\n\nexport default Movie;\n","import React from 'react';\nimport styled from 'styled-components';\nimport GlobalStyle from './Components/GlobalStyle';\nimport Movie from './Components/MovieList/MovieList.Container';\n// import * as types from 'styled-components/cssprop';\n\nconst Container = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 50px;\n  background: #4d4c49;\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <GlobalStyle />\n      <Movie />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}